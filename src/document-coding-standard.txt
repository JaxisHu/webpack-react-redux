注：规范
  一：样式
    1.****
      样式建议写在.less里,并且添加引用 @import "variables.less"; 
      如有颜色、字体、字号需求，在variables.less中查找，没有的话添加进去再引用。
    2.*****
      涉及到公共的样式、公共组件的样式写在common.less里，app.js中作统一引入。
    3.*****
      .less(混入)中不同元素有部分相同样式的，抽取相同部分。如：
        .one{
          border: 1px solid #000000;
          padding: 20px;
          margin: 5px;
          color: red;
        }
        .two{
          border: 1px solid #000000;
          padding: 20px;
          margin: 5px;
          color: green;
        }
      可以优化成以下：
        .common(){
          border: 1px solid #000000;
          padding: 20px;
          margin: 5px;
        }
        .one{
          .common();
          color: red;
        }
        .two{
          .common();
          color: green;
        }

  二：组件
    1.单个js文件超过200行，要考虑原因，考虑分割组件。代码结构清晰，才利于    维护。
    2.表单列表、新增、编辑、操作按钮、table、提示框等，
      样式、布局一般UI一致，因此做的时候要考虑抽取公共组件。
      公共组件目前存放在components->public文件夹下，后续我们会放在私服上。
      公共组件要求：
        区分：
        结构性(一块区域,项目外可用性弱，主要减少代码量、利于维护)、
        元素性(后续放在私服上,元素不可有margin等样式)。
  三：react规范
    http://qianduan.guru/2016/03/03/airbnb-react-style-guide/
  四：请求
    1.url维护
      a.url统一在utils->Url.js中维护，按照模块排序，加好注释。
      b.工程名、模块名等建立const维护，url中引用。利于维护和查找。
  五：less
    1.代码组织
      代码按以下顺序组织：
      @import
      变量声明
      样式声明
      @import "mixins/size.less";

      @default-text-color: #333;

      .page {
        width: 960px;
        margin: 0 auto;
      }
      @import 语句

      @import 语句引用的文需要写在一对引号内，.less 后缀不得省略。引号使用 ' 和 " 均可，但在同一项目内需统一。

      /* Not recommended */
      @import "mixins/size";
      @import 'mixins/grid.less';

      /* Recommended */
      @import "mixins/size.less";
      @import "mixins/grid.less";
    2.混入（Mixin）
      在定义 mixin 时，如果 mixin 名称不是一个需要使用的 className，必须加上括号，否则即使不被调用也会输出到 CSS 中。

      如果混入的是本身不输出内容的 mixin，需要在 mixin 后添加括号（即使不传参数），以区分这是否是一个 className。

      /* Not recommended */
      .big-text {
        font-size: 2em;
      }

      h3 {
        .big-text;
        .clearfix;
      }

      /* Recommended */
      .big-text() {
        font-size: 2em;
      }

      h3 {
        .big-text(); /* 1 */
        .clearfix(); /* 2 */
      }
    3.避免嵌套层级过多

      将嵌套深度限制在2级。对于超过3级的嵌套，给予重新评估。这可以避免出现过于详实的CSS选择器。
      避免大量的嵌套规则。当可读性受到影响时，将之打断。推荐避免出现多于20行的嵌套规则出现。
    4.字符串插值
      变量可以用类似ruby和php的方式嵌入到字符串中，
      像@{name}这样的结构: 
        @base-url: "http://assets.fnord.com"; 
        background-image: url("@{base-url}/images/bg.png");




